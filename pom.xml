<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.0.2</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<groupId>com.entertours</groupId>
	<artifactId>passeio</artifactId>
	<version>0.1.0</version>
	<name>passeio-service</name>
	<description>Servico a cargo de armazenar as ofertas de passeios</description>
	<packaging>jar</packaging>
	
	<properties>
		<java.version>17</java.version>
		<spring-cloud.version>2022.0.1 </spring-cloud.version>
	</properties>

	<dependencies>

		<!-- STARTER BOOTSTRAP ALLOWS THE FETCH OF boostrap.yml CONFIG FILE -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-bootstrap</artifactId>
		</dependency>

		<!-- CONFIG CLIENT FOR RETRIEVING CONFIGURATION AT SERVICE STARTUP -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>

		<!-- SERVICE DISCOVERY CLIENT EUREKA -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>

		<!-- CLIENT LOAD BALANCER + INSTANCES RESOLVER PACKAGES -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-loadbalancer</artifactId>
		</dependency>

		<!-- OPENFEIGN MANAGES SERVICE FETCHING DATA -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>

		<!-- DATABASE CONECTOR -->
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- DATA JPA TO PERSIST DATA IN THE DB -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- STARTER WEB TO PROVIDE WEB SERVICE API -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- ACTUATOR TO MONITOR THE APPLICATION HEALTH -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!-- STARTER TEST TO PERFORM SOME UNIT TESTS -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- <dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency> -->

		<!-- LIBRARY USED TO VALIDATE USER INPUT -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<!-- DEVTOOLS FOR HOT RELOAD AND QUICKER REFRESH -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>

	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- <dependency>
				<groupId>io.github.resilience4j</groupId>
				<artifactId>resilience4j-bom</artifactId>
				<version>${resilience4j.version}</version>
				<type>pom</type>
				<scope>import</scope>
			  </dependency> -->

		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludeDevtools>true</excludeDevtools>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>